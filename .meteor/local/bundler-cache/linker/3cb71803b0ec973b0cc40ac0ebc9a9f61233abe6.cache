[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"players.js\":[\"babel-runtime/helpers/extends\",\"meteor/mongo\",\"numeral\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// imports/api/players.js                                                   //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nmodule.export({Players:function(){return Players},calculatePlayerPositions:function(){return calculatePlayerPositions}});var _extends;module.import('babel-runtime/helpers/extends',{\"default\":function(v){_extends=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var numeral;module.import('numeral',{\"default\":function(v){numeral=v}});\n                                                                            // 1\n                                                                            // 2\n                                                                            //\nvar Players = new Mongo.Collection('players'); // constructor function      // 4\n                                                                            //\nvar calculatePlayerPositions = function calculatePlayerPositions(players) {\n  var rank = 1;                                                             // 7\n                                                                            //\n  return players.map(function (player, index) {                             // 9\n    if (index !== 0 && players[index - 1].score > player.score) {           // 10\n      rank++;                                                               // 11\n    }                                                                       // 12\n                                                                            //\n    return _extends({}, player, {                                           // 14\n      rank: rank,                                                           // 16\n      position: numeral(rank).format('0o')                                  // 17\n    });                                                                     // 14\n  });                                                                       // 19\n};                                                                          // 20\n//////////////////////////////////////////////////////////////////////////////\n\n}]}},\"server\":{\"main.js\":[\"meteor/meteor\",\"../imports/api/players\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// server/main.js                                                           //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Players;module.import('../imports/api/players',{\"Players\":function(v){Players=v}});// import '../imports/utils'\n                                                                            // 2\n                                                                            // 3\n                                                                            //\nMeteor.startup(function () {});                                             // 5\n//////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/imports/api/players.js","/server/main.js"],"names":["Mongo","numeral","Players","Collection","calculatePlayerPositions","players","rank","map","player","index","score","position","format","Meteor","startup"],"mappings":";;;;;;;;;AAAA,SAASA,KAAT,QAAsB,cAAtB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,OAAO,IAAMC,UAAU,IAAIF,MAAMG,UAAV,CAAqB,SAArB,CAAhB,C,CAAiD;;AAExD,OAAO,IAAMC,2BAA2B,SAA3BA,wBAA2B,CAACC,GAAY;AACnD,MAAIC,OAAO,CAAX;;AAEA,SAAOD,QAAQE,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAmB;AACpC,QAAIA,UAAU,CAAV,IAAeJ,QAAQI,QAAM,CAAd,EAAiBC,KAAjB,GAAyBF,OAAOE,KAAnD,EAA0D;AACxDJ;AACD;;AAED,wBACKE,MADL;AAEEF,gBAFF;AAGEK,gBAAUV,QAAQK,IAAR,EAAcM,MAAd,CAAqB,IAArB;AAHZ;AAKD,GAVM,CAAP;AAWD,CAdM,gF;;;;;;;;;;;ACLP;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASX,OAAT,QAAwB,wBAAxB;;AAEAW,OAAOC,OAAP,CAAe,YAAM,CAEpB,CAFD,mD","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport numeral from 'numeral';\n\nexport const Players = new Mongo.Collection('players'); // constructor function\n\nexport const calculatePlayerPositions = (players) => {\n  let rank = 1;\n\n  return players.map((player, index) => {\n    if( index !== 0 && players[index-1].score > player.score) {\n      rank++;\n    }\n\n    return {\n      ...player,\n      rank,\n      position: numeral(rank).format('0o')\n    }\n  });\n};\n","// import '../imports/utils'\nimport { Meteor } from 'meteor/meteor';\nimport { Players } from '../imports/api/players';\n\nMeteor.startup(() => {\n\n});\n"]}}]